name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      VITE_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      VITE_SORA_API_KEY: ${{ secrets.SORA_API_KEY }}
      VITE_ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
      VITE_KLING_API_KEY: ${{ secrets.KLING_API_KEY }}
      VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      VITE_TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
      VITE_LINKEDIN_API_KEY: ${{ secrets.LINKEDIN_API_KEY }}
      VITE_FACEBOOK_API_KEY: ${{ secrets.FACEBOOK_API_KEY }}
      VITE_ANALYTICS_ID: ${{ secrets.ANALYTICS_ID }}
      VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Type Check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Deploy to Supabase
        uses: supabase/setup-cli@v1
        with:
          version: latest
      
      - name: Deploy Static Assets
        run: |
          supabase login --api-key ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_ID }}
          supabase deploy

      - name: Run Database Migrations
        run: |
          supabase db push

      - name: Notify Deployment Status
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'deployments'
          slack-message: "Deployment ${{ job.status == 'success' && 'succeeded' || 'failed' }} for ${{ github.repository }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}